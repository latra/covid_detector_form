using CovidDetector.Models;
using Newtonsoft.Json.Linq;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;

namespace CovidDetector.Modules
{
    public class AutoMLModule
    {
        public AutoMLModule()
        {
            this.autoMLAPI = new API();
        }

        public API autoMLAPI { get; set; }
        public class API
        {
            public int getPredict(NewPatientModel patient)
            {
                POSTRequest(@"{
  ""payload"": {
    ""row"": {
      ""values"": [
        ""1"",
        ""3"",
        null,
        ""0"",
        null,
        null,
        null,
        null,
        null,
        ""0"",
        false,
        ""2"",
        null,
        ""3"",
        null,
        ""3"",
        ""3"",
        null,
        ""1"",
        ""3"",
        null,
        ""3"",
        ""2"",
        ""3"",
        ""3"",
        null,
        ""3"",
        ""4"",
        ""1"",
        ""1"",
        null,
        ""3"",
        ""0"",
        ""0"",
        ""2"",
        null,
        null,
        null,
        null,
        ""2"",
        ""3"",
        ""1"",
        false,
        ""1"",
        null,
        ""3"",
        null,
        ""3"",
        null,
        ""2"",
        ""3"",
        null,
        ""5"",
        null,
        null,
        ""0"",
        ""2"",
        null,
        ""1"",
        ""1"",
        false,
        ""1"",
        null,
        ""2"",
        null,
        ""1"",
        ""3"",
        ""3"",
        null,
        ""3"",
        null,
        ""5"",
        ""1"",
        ""2"",
        ""3"",
        null,
        ""0"",
        ""3"",
        null,
        ""1"",
        ""0"",
        ""3"",
        null,
        ""2"",
        ""0"",
        ""3"",
        null,
        ""2"",
        ""1"",
        null,
        null,
        ""0"",
        ""3"",
        null,
        null,
        ""3"",
        ""2"",
        ""3"",
        null,
        false,
        null,
        null,
        ""3"",
        ""2"",
        null,
        ""3"",
        ""1"",
        ""3""
      ],
      ""columnSpecIds"": [
        ""7875568693294399488"",
        ""275744322106687488"",
        ""7769734102051192832"",
        ""2581587331320381440"",
        ""4914451938298298368"",
        ""2149241767092813824"",
        ""1572781014789390336"",
        ""6760927785520201728"",
        ""590996296022622208"",
        ""1861011390941102080"",
        ""3302163271699660800"",
        ""3473300057539739648"",
        ""4887430340534075392"",
        ""8490310042430472192"",
        ""7337388537823625216"",
        ""381578913349894144"",
        ""2725702519396237312"",
        ""7913849290127048704"",
        ""1284550638637678592"",
        ""6434416812535840768"",
        ""4993264931777282048"",
        ""7625618913975336960"",
        ""5608006280913354752"",
        ""669809289501605888"",
        ""7481503725899481088"",
        ""5319775904761643008"",
        ""8202079666278760448"",
        ""5752121468989210624"",
        ""563974698258399232"",
        ""419859510182543360"",
        ""3840343427170435072"",
        ""9210885982809751552"",
        ""2869817707472093184"",
        ""4626221562146586624"",
        ""6472697409368489984"",
        ""1716896202865246208"",
        ""4310969588230651904"",
        ""4022739212078940160"",
        ""14535543719198720"",
        ""2687421922563588096"",
        ""4049760809843163136"",
        ""3734508835927228416"",
        ""1167457048326045696"",
        ""7193273349747769344"",
        ""8452029445597822976"",
        ""5175660716685787136"",
        ""8922655606658039808"",
        ""8740259821749534720"",
        ""2005126579016957952"",
        ""852205074410110976"",
        ""6355603819056857088"",
        ""7010877564839264256"",
        ""6040351845140922368"",
        ""4455084776306507776"",
        ""1743917800629469184"",
        ""8084986075967127552"",
        ""1428665826713534464"",
        ""3446278459775516672"",
        ""6722647188687552512"",
        ""5779143066753433600"",
        ""5281495307928993792"",
        ""3878624024003084288"",
        ""2293356955168669696"",
        ""302765919870910464"",
        ""7508525323663704064"",
        ""3552113051018723328"",
        ""2608608929084604416"",
        ""2320378552932892672"",
        ""9066770794733895680"",
        ""4166854400154796032"",
        ""1246270041805029376"",
        ""8634425230506328064"",
        ""7587338317142687744"",
        ""708089886334255104"",
        ""6932064571360280576"",
        ""6616812597444345856"",
        ""8778540418582183936"",
        ""2896839305236316160"",
        ""1140435450561822720"",
        ""8057964478202904576"",
        ""5031545528609931264"",
        ""4705034555625570304"",
        ""5896236657065066496"",
        ""4599199964382363648"",
        ""4128573803322146816"",
        ""3013932895547949056"",
        ""2399191546411876352"",
        ""8163799069446111232"",
        ""7049158161671913472"",
        ""958039665653317632"",
        ""6328582221292634112"",
        ""3590393647851372544"",
        ""7299107940990976000"",
        ""5857956060232417280"",
        ""6146186436384129024"",
        ""1822730794108452864"",
        ""2975652298715299840"",
        ""5463891092837498880"",
        ""5569725684080705536"",
        ""5202682314450010112"",
        ""1534500417956741120"",
        ""8346194854354616320"",
        ""6184467033216778240"",
        ""6905042973596057600"",
        ""8661446828270551040"",
        ""3158048083623804928"",
        ""996320262485966848"",
        ""2110961170260164608""
      ]
    }
  }
}");
                return 0;
            }
            private async void POSTRequest(string postData)
            {
                string url = "https://eu-automl.googleapis.com/v1beta1/projects/jofre-ext/locations/eu/models/TBL4667532413025386496:predict";
                HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
                request.Headers.Add("Authorization", "Bearer ");
                request.ContentType = "application/json; charset=utf-8";
                request.Method = "POST";
                var data = Encoding.ASCII.GetBytes(postData);

                request.ContentLength = data.Length;

                using (var stream = request.GetRequestStream())
                {
                    stream.Write(data, 0, data.Length);
                }

                var response = (HttpWebResponse)request.GetResponse();

                var responseString = new StreamReader(response.GetResponseStream()).ReadToEnd();
                Console.WriteLine(responseString);
            }
        }
    }
}
